{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","effect","setEffect","console","log","className","language","style","shadesOfPurple","href","Textra","data","onChange","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAAe,I,YCqFAA,MA9Ef,WAAiB,IAAD,EACcC,mBAAS,aADvB,mBACPC,EADO,KACCC,EADD,KASd,OAPAC,QAAQC,IAAIH,GAQV,qBAAKI,UAAU,MAAf,SAEI,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAf,SACE,gCACE,oBAAIA,UAAU,QAAd,0BAGA,mBAAGA,UAAU,SAAb,yDAGA,qBAAKA,UAAU,eAAf,SACA,cAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,IAAzC,SAnBF,iHAuBA,8BACE,mBAAGC,KAAK,6CAA6CJ,UAAU,SAA/D,+BAIJ,qBAAKA,UAAU,YAAf,SACE,gCACE,qBAAKA,UAAU,iBAAf,SACE,cAACK,EAAA,EAAD,CAAQT,OAAQA,EAAQU,KAAM,CAAC,QAAS,WAAY,QAAS,WAAY,OAAQ,WAAY,UAAW,YAAa,iBAEvH,qBAAKN,UAAU,iBAAf,SACA,gCACE,sBAAMA,UAAU,aAAhB,+BAGE,yBAAQA,UAAU,SAASO,SAAU,SAAAC,GAAOV,QAAQC,IAAIS,EAAEC,OAAOC,OAAQb,EAAUW,EAAEC,OAAOC,QAA5F,UACE,wBAAQA,MAAM,YAAd,uBAGA,wBAAQA,MAAM,YAAd,uBAGA,wBAAQA,MAAM,UAAd,qBAGA,wBAAQA,MAAM,UAAd,qBAGA,wBAAQA,MAAM,QAAd,mBAGA,wBAAQA,MAAM,OAAd,kBAGA,wBAAQA,MAAM,QAAd,mBAGA,wBAAQA,MAAM,QAAd,sCC1DLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f0f784f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { shadesOfPurple } from 'react-syntax-highlighter/dist/esm/styles/hljs'\nimport Textra from 'react-textra'\nimport logo from './logo.svg'\nimport './App.css'\n\nfunction App () {\n  const [effect, setEffect] = useState('rightLeft')\n  console.log(effect)\n  const code = `<Textra\n  data={['one', 'two', 'three']}\n  effect='flip'\n  duration={4000}\n  stopDuration={2000}\n  />`\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\"> */}\n        <div className=\"flex\">\n          <div className=\"flex-item\">\n            <div>\n              <h1 className=\"title\">\n                react-textra\n              </h1>\n              <p className=\"detail\">\n                  Slide your text in React application easily\n              </p>\n              <div className='code-wrapper'>\n              <SyntaxHighlighter language=\"jsx\" style={shadesOfPurple}>\n                {code}\n              </SyntaxHighlighter>\n              </div>\n            <div>\n              <a href=\"https://github.com/hosein2398/react-textra\" className=\"button\">Go to docs</a>\n            </div>\n            </div>\n          </div>\n          <div className=\"flex-item\">\n            <div>\n              <div className=\"textra-wrapper\">\n                <Textra effect={effect} data={['Swell', 'Becoming', 'Nifty', 'Pleasant', 'Kind', 'Charming', 'Winsome', 'Simpatico', 'Favorable']}/>\n              </div>\n              <div className=\"select-wrapper\">\n              <div>\n                <span className=\"chooseText\">\n                  Choose an effect:\n                </span>\n                  <select className=\"select\" onChange={e => { console.log(e.target.value); setEffect(e.target.value) }}>\n                    <option value='rightLeft'>\n                      rightLeft\n                    </option>\n                    <option value='leftRight'>\n                      leftRight\n                    </option>\n                    <option value='topDown'>\n                      topDown\n                    </option>\n                    <option value='downTop'>\n                      downTop\n                    </option>\n                    <option value='flash'>\n                      flash\n                    </option>\n                    <option value='flip'>\n                      flip\n                    </option>\n                    <option value='scale'>\n                      scale\n                    </option>\n                    <option value='press'>\n                      press\n                    </option>\n                  </select>\n              </div>\n            </div>\n\n            </div>\n          </div>\n        </div>\n      {/* </header> */}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}